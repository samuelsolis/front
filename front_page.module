<?php

/**
 *
 * This module allows the site admin to set advanced front page settings.
 *
 * This version is for Drupal 7. Earlier versions can be found at http://drupal.org/project/front.
 *
 * This module version was developed by timhilliard and various members of the drupal community.
 *
 * If you have any ideas/patches or requests, please post them at http://drupal.org/project/issues/front.
 *
 */

/**
 * Implements hook_help().
 */
function front_page_help($section) {
  switch ($section) {
    case 'admin/config/system/front':
      $roles = user_roles();
      $front_page_data = front_page_get_all();

      $special_note = '';
      if (count($roles) >= 3) {
        $special_note = '<fieldset>' . t('<legend><span class="fieldset-legend">front page by role usage</span></legend><div class="fieldset-wrapper"><p><strong>Note:</strong>When using the front pages by role option, please note that if a user has multiple roles the first role match will determine which front page they see. Here is the order that the roles will be checked (from left to right).</p>') . '<p>';
        $special_note_roles = array();
        foreach ($front_page_data as $role_id => $role) {
          $special_note_roles[] = "<strong>$role_id</strong> $roles[$role_id]";
        }
        $special_note .= implode(' | ', $special_note_roles);
        $special_note .= '</p>' . t('<p>The default setting for new roles is SKIP.</p>') . '</div></fieldset>';
      }
      return t('<p>Setup custom front pages for your site. Click on the option to expand the form and customise your settings.</p><p><em>Anonymous User</em> = visitor not logged in  | <em>Authenticated User</em> = visitor who is logged in</p>') . $special_note;
  }
}

/**
 * Implements hook_menu().
 */
function front_page_menu() {
  // Front page settings.
  $items['admin/config/front'] = array(
    'title' => 'Front Page',
    'description' => 'Administer custom front page settings.',
    'position' => 'right',
    'weight' => 0,
    'page callback' => 'drupal_get_form',
    'page arguments' => array('front_page_admin'),
    'access arguments' => array('access administration pages'),
    'file' => 'front_page.admin.inc',
  );
  $items['admin/config/front/settings'] = array(
    'title' => 'Settings',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
  );
  $items['admin/config/front/arrange'] = array(
    'title' => 'Arrange',
    'description' => 'Ability to re-arrange what order front page roles are processed.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('front_page_admin_arrange_form'),
    'access arguments' => array('administer menu'),
    'type' => MENU_LOCAL_TASK,
    'file' => 'front_page.admin.inc',
    'weight' => 1,
  );
  $items['front_page'] = array(
    'title' => '',
    'page callback' => 'front_page',
    'access callback' => TRUE,
    'type' => MENU_SUGGESTED_ITEM,
  );
  return $items;
}

/**
 * Implements hook_init().
 */
function front_page_init() {
  if ($_GET['q'] == 'front_page') {
    $_GET['q'] = 'node';
    drupal_set_message('There is a configuration error. The home page should not be set to the path "front_page".', 'error');
  }
  if (variable_get('front_page_enable', 0) && drupal_is_front_page()) {
    global $front_page, $conf;
    $front_page = front_page_get_by_role();

    if ($front_page) {
      switch ($front_page['mode']) {
        case 'themed':
        case 'full':
          $_GET['q'] = 'front_page';
          break;

        case 'redirect':
          $url = front_page_parse_url($front_page['data']);
          drupal_goto($url['path'], $url['options']);
          break;

        case 'alias':
          $url = front_page_parse_url($front_page['data']);
          $_GET['q'] = drupal_get_normal_path($url['path']);
          // need to set variable site_frontpage to current path so that it thinks it the front page for just this role.
          $conf['site_frontpage'] = $_GET['q'];
          break;
      }
    }

    // turn caching off for this page as it is dependant on role.
    $GLOBALS['conf']['cache'] = FALSE;
  }
}

/*
 * Function to handle the display of the front page.
 */

function front_page() {
  // $front_page variable should already have been loaded in front_page_init() function.
  global $front_page;

  if ($front_page) {
    switch ($front_page['mode']) {
      case 'themed':
        return check_markup($front_page['data'], $front_page['filter_format']);

      case 'full':
        print check_markup($front_page['data'], $front_page['filter_format']);
        exit;
    }
  }

  return 'If you are seeing this page, the site administrator has made a configuration error.';
}

function front_page_parse_url($path) {
  $url['path'] = $path;
  $url['options'] = array();
  if (preg_match('@^(?P<path>[^?#]+)(\?(?P<query>[^#]*))?(#(?P<fragment>.*))?$@', $path, $match)) {
    $url['path'] = $match['path'];
    if (!empty($match['query'])) {
      foreach (explode('&', $match['query']) as $query_part) {
        list($key, $value) = explode('=', $query_part);
        $url['options']['query'][$key] = $value;
      }
    }
    if (!empty($match['fragment'])) {
      $url['options']['fragment'] = $match['fragment'];
    }
  }
  return $url;
}

function front_page_get_by_role($index = 0, $number = 1) {
  global $user;
  $result = db_select('front_page', 'fp')
          ->fields('fp')
          ->condition('rid', array_keys($user->roles))
          ->condition('mode', 'skip', '<>')
          ->orderBy('weight', 'ASC')
          ->orderBy('rid', 'DESC')
          ->range($index, $number)
          ->execute()
          ->fetchAssoc();
  return $result;
}

function front_page_get_all() {
  global $user;
  $result = db_select('front_page', 'fp')
          ->fields('fp')
          ->orderBy('weight', 'ASC')
          ->orderBy('rid', 'DESC')
          ->execute()
          ->fetchAllAssoc('rid', PDO::FETCH_ASSOC);
  return $result;
}

function front_page_url_outbound_alter(&$path, &$options, &$original_path) {
  if (($path == '<front>' || empty($path)) && variable_get('front_page_breadcrumb', 0)) {
    $path = variable_get('front_page_breadcrumb_redirect', '');
    $original_path = $path;
  }
}

/**
 * Implements hook_theme().
 */
function front_page_theme() {
  return array(
    'front_page_admin_arrange_form' => array(
      'file' => 'front_page.admin.inc',
      'render element' => 'form',
    ),
  );
}